{
    "supported_languages" : ["PL","EN"],
    "lang_names_each_other" : {
        "PL" : {
            "polish_lang" : "Polski",
            "english_lang" : "Angielski"
        },
        "EN" : {
            "polish_lang" : "Polish",
            "english_lang" : "English"
        }
    },
    "language_presets" : {
        "PL": {
            "window_title" : "Interpreter Asemblera 16 bit",
            "next_button": "Wykonaj instrukcję",
            "prev_button": "Powrót do poprzedniej linii",
            "interval": "Opóźnienie",
            "start_stop_1": "Uruchom program",
            "start_stop_2": "Wstrzymaj program",
            "save_state" : "Zapisz stan",
            "auto_button": "Praca w tyb. auto",
            "registers": "Rejestry",
            "flags" : "FLAGI",
            "code": "Kod",
            "segment": "Segment (Stos)",
            "variables": "Zmienne",
            "terminal": "Teminal",
            "main_menu": "Wybór trybu pracy",
            "input_file": "Analizuj plik",
            "interactive": "Tryb interaktywny",
            "segment_col" :  ["Adr.", "Licz. Bin.", "Dec."],
            "variables_col" : ["Nazwa","Adr.", "Rozm.", "Format", "Zawartość"],
            "line" : "Linia",
            "param_memory" : "pamięć",
            "param_register" : "rejestr",
            "param_value" : "wartość",
            "connector" : " i ",
            "no_params" : "brak parametrów",
            "err_by" : "Wartości błędne",
            
            "AX_hint" : "Rejestr ogólnego przeznaczenia używany zwłaszcza przy działaniach arytmetycznych i przechowywyjący parametr oznaczający typ przerwań systemowych",
            "BX_hint" : "Rejestr ogólnego przeznaczenia używany zwłaszcza przy dostępie do pamięci",
            "CX_hint" : "Rejestr ogólnego przeznaczenia używana zwłaszcza do zliczania iteracji pętli i odliczania",
            "DX_hint" : "Rejestr ogólnego przeznaczenia używana zwłaszcza do dostępu do pamięci pomocy przy działaniach arytmetycznych i przekazywaniu dodatkowych parametrów przy przerwaniach systemowych",
            "SI_hint" : "Source Index (Indeks Źródła) - wskazuje pamięć z które należy pobrać wartości do umieszczenia na konsoli (przy operacja I/O) - może być używany też jako rejestr ogólnego przeznaczenia",
            "DI_hint" : "Destinaiton Index (Indeks Celu) - wskazuje pamięć do której należy wpisać dane pobrane z konsoli (przy operacja I/O) - może być używany też jako rejestr ogólnego przeznaczenia",
            "SP_hint" : "Stack Pointer (Wskaźnik Stosu) - wskazuje adress na ostani wpis na stosie",
            "BP_hint" : "Base Pointer - wskazuje podstawę stosu, lub wybrany adres w pamięci - może być używany jako rejestr ogólnego przeznaczenia",
            "IP_hint" : "Instruction Pointer - rejestr wskazujący na obecnie wykonywane polecenie",
            "open_file" : "Otwórz plik",
            "overflow_flag" : "Flaga Overflow zostaje ustawiona kiedy operacja arytmetyczna na dwóch liczbach\nz tym samym znakiem zwraca wynik ze znakiem przeciwnym\n\nNp:\n100 (0 1100100) + 100 (0 1100100) = 200 (1 1001000) ->  0+1 => 0 -> OF=1\n-100 (1 0011100) + 120 (0 1100100) = 20 (0 0010100) ->  0+1 => 0 -> OF=0",
            "direction_flag" : "Ta flaga wskazuje w jakiej kolejności bajty są zapisywane i odczytywane\n\nTF = 1:     wysokie -> małe (big endian)\nTF = 0:     małe -> wysokie (little endian)",
            "interrupt_flag" : "Ta flaga zezwala na wykonywanie przerwań na skutek sygnałów od urządzeń peryferyjnych\nMa to znaczenie gdy nasz program powinien oczekiwać na przerwania lub je ignorować.\n\nNiemniej, w naszym programie symulacje przerwań w oczekiwaniu na sygnały od peryferów\nnie są wspierane, tak więc wartość tej flagi pozostaje bez wpływu na sposób działania programu",
            "trap_flag" : "Ta flaga służy do trybu debugowania - jej aktywacja wywołuje przerwanie wstrzymujące egzekucję programu do jego wznowienia.\nFunkcja jest przydatan dla debuggerów asemblerowych. Ustawienie flagi pozostaje bez wpływu na program",
            "sign_flag" : "Ta flaga zostaje ustawiona zgodnie ze znakiem (pierwszym bitem) w wyniku ostatniej operacji arytmetycznej\n\n1 oznacza wartość negatywną a 0 pozytywną (oczywiście dla liczb traktowanych jako te ze znakiem)",
            "zero_flag" : "Wskazuje, że wynik ostatniej operacji arytmetycznej był równy 0",
            "auxiliary_carry_flag" : "Ta flaga zostaje ustawiona jeśli przy ostatniej operacji arytmetycznej nastąpiło zapożyczenie lub\nprzepełnienie wartości między nibblami dolnego bajtu liczby\n\nEX.\n110 + 22 = 0110 1110 + 0001 0110\n11\n1110\n0110\n+____\n1 0100 - \"1\" na początku - flaga AC zostaje ustawiona",
            "parity_flag" : "Ta flaga jest ustawiana jesli ilość jedynek dla dolnego bajtu wyniku jest liczbą parzystą\n\nNp:\nal = 47 -> 0010 1111 -> SF = 0 - ilość '1' w 47 jest nieparzysta",
            "carry_flag" : "Ta flaga zostaje ustawiona kiedy wynik operacji arytmetycznej nie mieści się danej ilości bitów\n\nNp:\nal = 255 | al + 255 (teoretycznie) = 510\nponieważ to byłoby 111111110 => 1 11111110\nCF jest ustawiana na 1 (ta dodatkowa '1' zostaje tak jakby ustawiona jako wartość flagi)\nal = 254 (11111110) - dzięki temu, pozostała część nadal się mieści",
            
            "cancel": "Anuluj",
            "confirm": "Ok",

            "file_doesnt_exist" : "Plik nie istnieje!",
            "improper_label" : "Niepoprawna etykieta!",
            "improper_file_type" : "Niepoprawny typ pliku!",
            "data_sec_error" : "Błąd w sekcji danych!",
            "file_too_big" : "Plik może być zbyt duży!",
            "original_error" : "Nieobsługiwany błąd!",
            "value_not_allowed" : "Niobsługiwana wartość!",
            "operation_forbidden" : "Operacja zabroniona!",
            "invalid_binary_number" : "Niepoprawny number binarny",
            "unsuported_instruction" : "Wykryta instrukcja nie jest obsługiwana",
            "argument_unrecognized" : "Argument nierozpoznany",
            "instruction_error" : "Błąd wykonywania instrukcji",
            "mem_call_error" : "Błąd odwołania do pamięci",
            "double_mem_ref" : "Dwa odwołania do pamięci w instrukcji",
            "many_reg_call" : "Wielokrotne użycie rejestrów",
            "use_reg_once" : "Rejestr wykorzystany podwójnie",
            "compl_val_error" : "Błąd obliczania wartości",
            "no_explicite_size" : "Brak jawnej definicji rozmiaru",
            "expli_size_diff" : "Definicje rozmiaru sobie nierówne",
            "expli_size_ign" : "Jawna definicja rozmiaru zignorowana",
            "ill_doub_mem" : "Podwóje użycie pamieci zabronione",
            "val_not_dest" : "Nie można zapisać do wartości",
            "wrong_no_params" : "Niepoprawna liczba parametrów",
            "wrong_param_types" : "Niedopuszczalne połączenie parametrów",
            "two_reg_same_type" : "Oba rejestry tego samego typu",
            "wrong_first_reg" : "Niepoprawny pierwszy rejestr",
            "cant_use_sp" : "Nie można użyć SP",
            "value_too_big" : "Wartość za duża",
            
            "only_1_0_allowed" : "Wprowadź poprawny number binary - składający się z 1 i 0",
            "value_0_255" : "Wartość poza zakresem 0 - 255",
            "cannot_edit_name" : "Nie można zmieniać nazwy zmiennej!",
            "cannot_edit_address" : "Nie można zmieniać adresu pamięci!",
            "cannot_edit_size" : "Nie można zmieniać rozmiaru zmiennej!",
            "cannot_edit_format" : "Nie można zmieniać formatu zmiennej!",
            "unhandled_exception" : "Nieobsługiwany problem wewnętrzny",
            "sel_new_file": "Wyłącz ostrzeżenie i wybierz nowy plik",
            "cont_this_file": "Kontynuuj z tym plikiem",
            "load_interactive": "Załaduj plik w trybie interakywnym",
            "incorrect_label" : "Niepoprawna etykieta:\nLinia {e.line()}\nKomunikat: \"{e.message()}\"",
            "incorrect_data_def" : "Niepoprawna deklaracja danych:\nLinia {e.line()}\nKomunikat: \"{e.message()}\"",
            "wrong_file_extension" : "Rozszeżenia pliku to nie `.asm` \nCo chesz zrobić?",
            "file_not_sel_try_again" : "Nie wybrano pliku lub wybrany plik nie istnieje! 😵\nCzy chcesz spróbować ponownie?",
            "file_size_warning" : "Wygląda na to że próbujes otworzyć plik o rozmiarze > 1MB! \nCzy to jest na pewno to co chesz zrobić?",
            "only_binary_value" : "W polu można wprowadzić tylko wartości binarne - zawierajace tylko 1 i 0!",
            "is_valid_supported" : "Sprawdź czy instrukcja jest poprawną instrukcją Asembly, i jest obsługiwana",
            "arg_not_recognized" : "Podczas przetwarzania instrukcji wykryto argument nierozpoznanego typu",
            "processing_error" : "Podczas wykonywania polecenia nastąpił błąd",
            "undef_elem_mem_call" : "W odwołaniu do pamięci wykryto nieznany element - sprawdź pisownię",
            "double_mem_call_not_all" : "Niemożliwe jest zastosowanie podwójengo odwołąnia do pamieci - w jednej instrukcji. Zmień polecenie!",
            "too_many_reg_calls" : "W poleceniu wykryto ponad dwa odwołania do rejestrów - możliwe jest co najwyżej jedno odwołanie do rejestów BX/DX i jedno do rejestrów SI/DI jednocześnie",
            "same_reg_used_twice" : "Ten sam rejest został wywołany dwukrotnie w odwołaniu do pamięci - rejestru można użyć tylko raz",
            "calc_val_failed" : "Obliczanie wartości wyrażenia niepowiodło się - wyktyto nierozpoznany element. Sprawdź składnię",
            "no_size_in_inst" : "Przynajminej jeden argument musi posiadać jawnie zdefiniowany rozmiar",
            "expli_size_mimatch" : "Niedopasowanie jawnych definicji rozmiaru. Wystarczy jedna definicja, ale przy podaniu dwóch muszą one być sobie równe",
            "why_expli_siz_ign" : "Jawna definicja rozmiaru rejestru została zignorowana, ponieważ narzuca rozmiar większy niż ten jaki ma rejestr",
            "ill_to_use_mem_call_twice" : "Z uwagi na ograniczenia natury hardware'ovej, zabronione jest użycie dwóch odwołań do pamięci w jednej instrukcji.",
            "not_poss_to_save_to_val" : "Pierwszy argument musi być miejscem gdzie można zapisać wartość - musi być rejestrem lub odwołaniem do pamięci - nie wartoscią",
            "incorrect_no_of_params" : "Dla tej instrukcji niepoprawnym jest podanie następującej liczby paremetów",
            "param_comb_not_all" : "To połączenie parametrów jest niedopuszczalne dla tej instrukcji",
            "ret_same_type" : "W odwołaniu do pamięci, oba rejestry są tego samego typu, co jest zabronione",
            "first_reg_bx" : "Przy odwołaniu do pamięci, przy użyciu dwóch rejestrów, rejestr BX musi być pierwszym w odwołaniu",
            "sp_not_callable" : "Zabronione jest wykorzystanie SP jako rejestru z wartością przy odwołaniach do pamięci",
            "val_exceeds_bounds" : "Podana wartość przekracza rozmiar docelowy. Wszystkie znaki które nie zmieszczą się zostana pominięte"
        },
        "EN": {
            "window_title" : "16 bit Assembly Interpreter",
            "next_button": "Execute instruction",
            "prev_button": "Return to previous",
            "interval": "Interval",
            "start_stop_1": "Start program",
            "start_stop_2": "Stop program",
            "save_state" : "Save progress",
            "auto_button": "Automatic run",
            "registers": "Registers",
            "flags" : "FLAGS",
            "code": "Code",
            "segment": "Segment (Stack)",
            "variables": "Variables",
            "terminal": "Teminal",
            "main_menu": "Choose working method",
            "input_file": "Analize file",
            "interactive": "Interactive mode",
            "segment_col" :  ["Addr.", "Binary num.", "Dec."],
            "variables_col" : ["Name","Addr.", "Size", "Format", "Content"],
            "line" : "Line",
            "param_memory" : "memory",
            "param_register" : "register",
            "param_value" : "value",
            "connector" : " and ",
            "no_params" : "no params",
            "err_by" : "Wrong Values",
            
            "AX_hint" : "General purpose register used also for performing arithmetic equations and calling interruptions",
            "BX_hint" : "General purpose register used for accessing memory",
            "CX_hint" : "General purpose register used for counting and loops",
            "DX_hint" : "General purpose register used for accessing memory and params for interruptions",
            "SI_hint" : "Source Index - points to memeory where output value is stored;\ncan be used as another general purpose register",
            "DI_hint" : "Destinaiton Index - points to memeory where input value will be stored;\ncan be used as another general purpose register",
            "SP_hint" : "Stack Pointer - points to last entry on stack (Segment)",
            "BP_hint" : "Base Pointer - points to base of the stack or other place in memory;\ncan be used as a general purpose register",
            "IP_hint" : "Instruction Pointer - points to currently executed instruction",
            "open_file" : "Open file",
            "overflow_flag" : "This flag is set when the result of last operations returned result which have\ndifferent sign than the two numbers involved in the operations if\nboth numbers had the same sign.\n\nEx:\n100 (0 1100100) + 100 (0 1100100) = 200 (1 1001000) ->  0+1 => 0 -> OF=1\n-100 (1 0011100) + 120 (0 1100100) = 20 (0 0010100) ->  0+1 => 0 -> OF=0",
            "direction_flag" : "This flag indicates in which direction strings are stored and red\n\nTF = 1:     high bits -> small bits (big endian)\nTF = 0:     small bits -> high bits (little endian)",
            "interrupt_flag" : "If this flag is set it would allow to execute interruption caused by external\ndevices (mainly to allow for smooth operation of peripherals).\nThis is needed for programs which have to sync, either with\nthe user (wait for user interaction) or with peripherals.\n\nHowever, since this program doesn't allow such functionalityties,\nusefullness of this flag comes down to additional bit of space which can be used. ",
            "trap_flag" : "Set to enable single-step mode for debugging; clear to disable single-step mode.",
            "sign_flag" : "This flag is set according to the sign of last arithmetic operations.\nIt therefore indicates what was the sign of number from last arithmetic operation",
            "zero_flag" : "Indicates if result of last arithmetic operation was equal to 0",
            "auxiliary_carry_flag" : "This flag is set when performing addition operation on an 8-bit number,\nwhen there is an auxiliary bit from adding bits in the lower nibble\n\nEX.\n110 + 22 = 0110 1110 + 0001 0110\n11\n1110\n0110\n+____\n1 0100 - \"1\" on the beginning is set auxiliary flag",
            "parity_flag" : "The sign flag defines if the number of bits in last byte of most recent calculation was even or not\n\nEx:\nal = 47 -> 0010 1111 -> SF = 0 - num. of '1' in 47 is not even",
            "carry_flag" : "This flag stores result of arithmetical operations if the result\n(additional bit) couldn't fit in the register on which we perform an opperation\n\nEx:\nal = 255 | al + 255 (theoretically) = 510\nsince that would be 111111110 => 1 11111110\nCF is set to 1 (this additional '1' from the beginning)\nal = 254 (11111110) - remaining parth that could still fit",
            
            "cancel": "Cancel",
            "confirm": "Ok",
            
            "file_doesnt_exist" : "File doesn't exist!",
            "improper_label" : "Improper label!",
            "improper_file_type" : "Improper file type!",
            "data_sec_error" : "Data section error!",
            "file_too_big" : "File size might be too big!",
            "original_error" : "original error!",
            "unhandled_exception" : "Unhandled internal error!",
            "value_not_allowed" : "Improper value!",
            "operation_forbidden" : "Operation forbidden!",
            "invalid_binary_number" : "Invalid binary number",
            "unsuported_instruction" : "Instruction is not supported",
            "argument_unrecognized" : "Argument unrecongized",
            "instruction_error" : "Error occurred while processing",
            "mem_call_error" : "Error in memory call",
            "double_mem_ref" : "Double memory reference",
            "many_reg_call" : "Multiple register calls",
            "use_reg_once" : "Double use of the same register",
            "compl_val_error" : "Error in complex value",
            "no_explicite_size" : "No explicite size definition",
            "expli_size_diff" : "Explicite sizes not equal",
            "expli_size_ign" : "Explicite size ignored",
            "ill_doub_mem" : "Double use of memory forbidden",
            "val_not_dest" : "Can't save not to memory",
            "wrong_no_params" : "Incorrect number of params",
            "wrong_param_types" : "Params combination not allowed",
            "two_reg_same_type" : "Both registers of one type",
            "wrong_first_reg" : "Incorrect first register",
            "cant_use_sp" : "Cannot use SP",
            "value_too_big" : "Value too big",
            
            "only_1_0_allowed" : "Enter valid binary number - only 1's and 0's",
            "value_0_255" : "Value outside range 0 - 255",
            "cannot_edit_name" : "It's not possible to edit variable name!",
            "cannot_edit_size" : "It's not possible to edit variable size!",
            "cannot_edit_address" : "It's not possible to edit memory address!",
            "cannot_edit_format" : "It's not possible to edit variable format!",
            "sel_new_file": "Disable warning and select new file",
            "cont_this_file": "Continue with this file",
            "load_interactive": "Load file in interactive mode",
            "incorrect_label" : "Improper line marker definition:\nLine {e.line()}\nMessage: \"{e.message()}\"",
            "incorrect_data_def" : "Wrong data definition:\nLine {e.line()}\nMessage: \"{e.message()}\"",
            "wrong_file_extension" : "File type is not `.asm` \nWant do you want to do?",
            "file_not_sel_try_again" : "No file selected or file doesn't exist! 😵\nWant to try again?",
            "file_size_warning" : "It seems you are trying to open file above 1MB in size! \nWhat do you want to do?",
            "only_binary_value" : "Only text containing 1's and 0's can be put in this field!",
            "is_valid_supported" : "Sprawdź czy instrukcja jest poprawną instrukcją Asembly, i jest obsługiwana",
            "arg_not_recognized" : "During processing an unrecognized argument was detected",
            "processing_error" : "During processing the following internal error was detected",
            "undef_elem_mem_call" : "In memory call, an unrecognized element was detected - check spelling",
            "double_mem_call_not_all" : "It's not possible to call memory twice in one instruction - modify instruction!",
            "too_many_reg_calls" : "More than two register references were detected - it's possible to use at most one call to registers BX/DX and at most one call to registers SI/DI",
            "same_reg_used_twice" : "The same register was used twice inside memory call - register can be used only once",
            "calc_val_failed" : "Calculating expression's value failed - unrecognized element detected. Check syntax.",
            "no_size_in_inst" : "At least one argument must have an explicite size definiton",
            "expli_size_mimatch" : "Explicite size definitions for both instruction doesn't match. One would be enough, but for two they have to be equal.",
            "why_expli_siz_ign" : "Explicite register's size definition was ignored, as it demands size greater than the register itself",
            "ill_to_use_mem_call_twice" : "Due to hardware limitations it's not possible to use memory call twice in one instruction",
            "not_poss_to_save_to_val" : "First arugment must be a place where value can be stored - must be either register or memory reference - not value",
            "incorrect_no_of_params" : "For this instruction it's not possible to pass the following number of parameters:",
            "param_comb_not_all" : "This param combination is not allowed for this instruction",
            "ret_same_type" : "In memory call, both registers are the same type - use different types.",
            "first_reg_bx" : "In memory call, first register must be BX",
            "sp_not_callable" : "It's forbidden to use SP in direct memory call",
            "val_exceeds_bounds" : "Provided text value is too big, and exceeds destinaiton size. All chars above those which would fit will be ignored"
        }
    }
}