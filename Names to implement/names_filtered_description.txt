AAA: ASCII Adjust After Addition
AAD: ASCII Adjust AX Before Division
AAS: ASCII Adjust AL After Subtraction
ADC: Add with Carry
ADD: Add
AND: Logical AND
CALL: Call Procedure
CBW
CWDE
CLC: Clear Carry Flag
CLD: Clear Direction Flag
CLI
CMC: Complement Carry Flag
CMP: Compare Two Operands
DAA: Decimal Adjust AL after Addition
DAS: Decimal Adjust AL after Subtraction
DEC: Decrement by 1
DIV: Unsigned Divide
IDIV: Signed Divide
IMUL: Signed Multiply
IN: Input from Port
INC: Increment by 1
INT
INTO
IRET
IRETD
JA
JAE
JB
JBE
JC
JE
JG
JGE
JL
JLE
JNA
JNAE
JNB
JNBE
JNC
JNE
JNG
JNGE
JNL
JNLE
JNO
JNP
JNS
JNZ
JO
JP
JPE
JPO
JS
JZ
JMP: Jump
LAHF: Load Status Flags into AH Register
LDS
LES
LFS
LGS
LSS
LEA: Load Effective Address
LODS
LODSB
LODSW
LODSD
MOV: Move to/from Debug Registers
MOVS
MOVSB
MOVSW
MOVSD: Move Scalar Double-Precision Floating-Point Value
MUL: Unsigned Multiply
NEG: Two's Complement Negation
NOP: No Operation
NOT: One's Complement Negation
OR: Logical Inclusive OR
OUT: Output to Port
POP: Pop a Value from the Stack
PUSH: Push Word or Doubleword Onto the Stack
RCL
RCR
ROL
ROR
REP
REPE
REPZ
REPNE
REPNZ
RET: Return from Procedure
SAHF: Store AH into Flags
SAL
SAR
SHL
SHR
SBB: Integer Subtraction with Borrow
SCAS
SCASB
SCASW
SCASD
STC: Set Carry Flag
STD: Set Direction Flag
STI: Set Interrupt Flag
SUB: Subtract
TEST: Logical Compare
WAIT
FWAIT
XCHG: Exchange Register/Memory with Register
XLAT
XLATB
XOR: Logical Exclusive OR
